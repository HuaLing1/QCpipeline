#!/bin/bash

# Process a VCF file of indel information, where alleles have been converted from Illumina manifest format (e.g., "-" and "A") to conform to VCF conventions (.e.g, "T", and "TA")
# Note input VCF file is generated by QCpipeline "make.allele.mappings" R function, run with argument indels.vcfout=TRUE
# Runs the Broad Institute's GATK LeftAlignAndTrimVariants to left align positions in the VCF file 
# The output can be used to update indel alleles and positions in a project's SNP annotation and allele mappings file

# SN 7/24/2014

## Arguments
# (1) directory from which to read input VCF file and to write out results
# (2) name of input VCF (pre left-alignment)
# (3) name of output VCF (post left-alignment)
######## 

## Define variables
dir=$1
indelVCF=$2
outputVCF=$3


## Run GATK LeftAlignAndTrimVariants
# See http://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_sting_gatk_walkers_variantutils_LeftAlignAndTrimVariants.html

echo  -e "	Running GATK left align tool\n"

# set location of GATK tool:
gatk="/projects/geneva/geneva_sata/apps/GenomeAnalysisTK-3.1-1/"

# specify input VCF file name, including file path
vcfNeedsLeftAlign="${dir}/${indelVCF}"

# specify output VCF file name, including file path
vcfLeftAlign="${dir}/${outputVCF}"

java -Xmx4g -jar ${gatk}GenomeAnalysisTK.jar \
-R ${gatk}/bundle/2.8/b37/human_g1k_v37.fasta  \
-T LeftAlignAndTrimVariants \
--variant ${vcfNeedsLeftAlign} \
-o ${vcfLeftAlign}


## Parse VCF file into lists of updated positions and alleles
 
# alleles, using syntax provided by Tin Louie:
# (deletions have length($5) == 1)

fnOutA="${dir}/indels.update.alleles.txt"
egrep -v '^#' ${vcfLeftAlign} \
| awk '{ if(length($5)==1) print $3"\tI\tD\t"$4"\t"$5; else print $3"\tD\tI\t"$4"\t"$5 }' \
> ${fnOutA}

# positions:
fnOutP="${dir}/indels.update.pos.txt"
egrep -v '^#' ${vcfLeftAlign} | awk '{print $3, $2}' > ${fnOutP}

echo -e "Finished, see output in ${dir}\n"